name: "OpenWRT Firmware Download"
description: "Queries OpenWRT Firmware Selector and generates the image"
inputs:
  version:
    description: "The openwrt version to generate"
    required: true
  firmware_id:
    description: "The id of the firmware to build"
    required: true
  firmware_target:
    description: "The target of the firmware"
    required: true
  packages:
    description: "Path to the custom packages.json to load"
    required: true
  boot:
    description: "Path to the custom boot.sh to load"
    required: true
  outdir:
    description: "Path to output the images into"
    required: false
    default: "./"
outputs:
  image:
    description: "Path to the generated image file"
    value: ${{ steps.image.outputs.image_name }}

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v3

    - name: setup
      shell: bash
      run: |
        echo "openwrt_targets=https://downloads.openwrt.org/snapshots/targets/${{ inputs.firmware_target }}/" >> $GITHUB_ENV
        echo "openwrt_files=./build/openwrt/files" >> $GITHUB_ENV

        mkdir -p ./build/openwrt/files

        sudo apt update && sudo apt install build-essential libncurses-dev \
        zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3

    - name: Download Image Builder
      shell: bash
      run: |
        cd ./build/openwrt && \
        wget -r --no-parent -nd -A '*imagebuilder*' ${{ env.openwrt_targets }} && \
        tar -J -x -f openwrt-imagebuilder-*.tar.xz

    - name: Create uci-defaults
      shell: bash
      run: |
        mkdir -p ${{env.openwrt_files}}/etc/uci-defaults
        cp ${{ inputs.boot }} ${{env.openwrt_files}}/etc/uci-defaults/99-custom

    - name: Create packages
      shell: bash
      id: package
      env:
        package_file: ${{ inputs.packages }}
      run: echo "packages=$(cat $package_file | jq -c -r 'join(" ")')" >> $GITHUB_OUTPUT

    - name: Make image
      shell: bash
      id: image
      run: |
        cd ./build/openwrt/openwrt-imagebuilder-*/ && \
        make image \
        PROFILE="${{inputs.firmware_id}}" \
        PACKAGES="${{ steps.package.outputs.packages }}" \
        FILES="${{env.openwrt_files}}"

        cp $(find ./build/openwrt/. -type f -name '*ext4*factory*.img.gz') ${{ inputs.outdir }}

        echo "image_name=$(find ${{ inputs.outdir }} -type f -name '*ext4*factory*.img.gz')"
