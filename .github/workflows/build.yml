name: build
on:
  schedule:
    - cron: "0 0 * * 0" # Every Sunday
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image-dirs: ${{ steps.images.outputs.dirs }}
      openwrt-config: ${{ steps.openwrt.outputs.config }}

    steps:
      - uses: actions/checkout@v3

      - name: Read OpenWRT config
        id: openwrt
        run: |
          # Read multiline json without needing to escape
          echo "config<<EOF" >> $GITHUB_OUTPUT
          cat ".github/configs/openwrt.json" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get image types
        id: images
        run: echo "dirs=$(ls -d img/* | jq -R -s -c 'split("\n")[:-1]')"

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        version: ${{ fromJson(needs.setup.outputs.openwrt-config).versions }}
        firmware: ${{ fromJson(needs.setup.outputs.openwrt-config).firmware }}
        image-dir: ${{ fromJson(needs.setup.outputs.image-dirs)}}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: openwrt-cache
        with:
          path: "./openwrt-artifacts"
          key: ${{ matrix.version }}-${{ matrix.firmware.id }}-${{ hashFiles('${{ matrix.image-dir }}/packages.json', '${{ matrix.image-dir }}/boot.sh')}}

      - uses: ./.github/actions/fetch-openwrt-image.yml
        if: steps.openwrt-cache.cache-hit != 'true'
        with:
          version: ${{ matrix.version }}
          firmware: ${{ matrix.firmware }}
          packages: ${{ matrix.image-dir }}/packages.json
          boot: ${{ matrix.image-dir }}/boot.sh
          outdir: "./openwrt-artifacts"
